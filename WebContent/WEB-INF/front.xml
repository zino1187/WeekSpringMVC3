<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	<!-- 이 파일에 작성된 객체(빈)의 명단을 보고서, ApplicationContext
	형의 컨테이너가 메모리에 인스턴스를 마구 마구 올린다!!
	그리고, 개발자가 필요로 하는 클래스내로 DI 시켜준다!!
	따라서 개발자는 코드내에서 직접 new 로 생성할 필요없다 
	개발자 얻는것?? 의존성을 약화시키기때문에 유지보수성이 올라감
	 -->
	 <!-- url 에 따라 어떤 하위 컨트롤러가 일을 할지를 결정하려면 
	 	매핑 방식을 결정해야하고 가장 많이 쓰이는 3가지 유형 중 Simple~로간다 
	  -->
	 <bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/hello">helloController</prop>
				<prop key="/notice/insert">noticeController</prop>
			</props>
		</property>	 	
	 </bean>
	 
	 <!-- 어떤 종류의 viewResolver를 이용할지를 결정짓자 -->
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 	<property name="prefix" value="/"></property>
	 	<property name="suffix" value=".jsp"></property>
	 </bean>
	 
	 <bean id="helloController" class="test.HelloController"></bean>
	 	
	<bean id="jdbcNoticeDAO" class="notice.model.JdbcNoticeDAO"></bean>
	<bean id="boardServiceImpl" class="board.model.service.BoardServiceImpl">
		<property name="noticeDAO" ref="jdbcNoticeDAO"></property>	
	</bean>		 	
	
	<bean id="noticeController" class="notice.controller.NoticeController">
		<!-- dao를 주입시켜주자!! -->
		<property name="boardService" ref="boardServiceImpl" ></property>	
	</bean>
	 
</beans>








